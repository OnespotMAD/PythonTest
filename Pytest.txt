install pip in cmd 

python -m ensurepip â€“upgrade

python3 get-pip.py
pip install Flask

# app.py
from flask import Flask, request, render_template
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from chromedriver_autoinstaller import install
from time import sleep

app = Flask(__name__)

# Install ChromeDriver
chrome_path = install()

# Set up Chrome options
chrome_options = Options()
chrome_options.add_argument("--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3")
chrome_options.add_argument("--headless=new")

# Start the Service
service = Service(executable_path=chrome_path)

# Start the WebDriver
driver = webdriver.Chrome(service=service, options=chrome_options)

driver.get("https://readloud.net/english/british/1-male-voice-brian.html")

script = """function mediaElementIsPlaying(el) {
  return el && el.currentTime > 0 && !el.paused && !el.ended && el.readyState > 2;
}
// Check if any audio element is playing
const audioIsPlaying = !![...document.getElementsByTagName('audio')].find((el) => mediaElementIsPlaying(el));
// If either audio or video is playing, return true
return audioIsPlaying;"""

def TextToSpeech(text):
    try:
        textarea = driver.find_element(By.NAME, "but1")
        textarea.clear()
        textarea.send_keys(text)

        submit = driver.find_element(By.NAME, "butt0")
        submit.click()

        while 1:
            playing = driver.execute_script(script)
            if not playing:
                break
            sleep(0.1)

    except Exception as e:
        print(e)
        print("Restarting website")
        driver.get("https://readloud.net/english/british/1-male-voice-brian.html")
        TextToSpeech(text)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/speak', methods=['POST'])
def speak():
    text = request.form['text']
    TextToSpeech(text)
    return 'Speech conversion done'

if __name__ == "__main__":
    app.run(debug=True)


Create a folder named templates in the same directory as your app.py and place the following

<!-- templates/index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Text to Speech</title>
    <script>
        function sendTextToSpeech(text) {
            fetch('/speak', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: 'text=' + encodeURIComponent(text)
            }).then(response => {
                if(response.ok) {
                    console.log('Text sent for speech conversion.');
                } else {
                    console.log('Failed to send text.');
                }
            });
        }

        function handleButtonClick(button) {
            const text = button.getAttribute('speak');
            sendTextToSpeech(text);
        }
    </script>
</head>
<body>
    <button speak="Hello, this is a test" onclick="handleButtonClick(this)">Speak</button>
</body>
</html>

python app.py

This will start a web server on http://127.0.0.1:5000/. Open this URL in your web browser, and click the button to trigger the text-to-speech functionality.
